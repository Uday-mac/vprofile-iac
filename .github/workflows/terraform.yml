name: "eks-iac"
on:
  push:
    branches:
      - main
    paths:
      - terraform/** 
  pull_request:
    branches: 
      - main
    paths:
      - terraform/**

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BACKEND_TF_STATE: ${{ secrets.BACKEND_TF_STATE }}
  AWS_REGION: us-east-1
  EKS_CLUSTER: vprofile-eks

jobs:
  terraform:
    name: "apply terraform code changes"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: checkout source code
        uses: actions/checkout@v4
      
      - name: installing terraform 
        uses: hashicorp/setup-terraform@v3

      - name: Terraform init 
        id: init 
        run: terraform init -backend-config="bucket=$BACKEND_TF_STATE"

      - name: Terraform format
        id: fmt 
        run: terraform fmt -check

      - name: Terraform validate
        id: validate
        run: terraform validate 

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false -out planfile 

      - name: Terraform plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform apply 
        id: apple
        run: terraform apply -auto-approve -input=false -parallelism=1 planfile

      - name: aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: getting the kubeconfig 
        id: getconfig
        if: steps.apple.outcome == 'success'
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION}} --name ${{ env.EKS_CLUSTER}}

      - name: installing the ingress 
        if: steps.apple.outcome == 'success' && steps.getconfig.outcome == 'success'
        run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.11.2/deploy/static/provider/cloud/deploy.yaml